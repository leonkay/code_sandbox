ifdef::env-github[]
:tip-caption: :bulb:
:note-caption: :information_source:
:important-caption: :heavy_exclamation_mark:
:caution-caption: :fire:
:warning-caption: :warning:
endif::[]
= Readme
Leon Kay <leokay@gmail.com>



== Description

`BragDoc` is a utility for tracking both your day-to-day and career spanning
achievements.

Currently, a WIP command line utility, the eventual goal is to provide hooks that can
tie into a person's daily workflow to ease friction as much as possible when
tracking these changes.
== Architectural Design Records

=== 0001: Technical Choices

- Use Golang, *See Technical Goals*
- Store Activities in a Relational Database
  * Use sqlite3 as a simple local storage solution

== Data Model

TODO

== Persistent Context

== CLI

Currently, the CLI has the following API:

----
  go run main.go <action> <activity> <content>
----

Here `action` can be

- `join`: Will Affect the persistent context that affects future actions
- `leave`: Will Affect the persistent context that affects future actions
- log
- add
- remove
- update
- switch

TODO

== Motivation

Typically, during our quarterly - yearly performance reviews, I find it more of
a challenge to recall the specific tasks or achievements I've had, especially
actions that weren't tied to a `git` commit. By easing the friction of tracking
these actions, `BragDoc` should provide an easy way to provide a timeline and
references for

- Performance Reviews
- Resume Content
- Linked In Content

In the future, AI can be used to generate this content for you.


=== Technical Goals

Learn more about:

- `golang`

== Roadmap

1. CLI tools
2. Simple Web Interface, Locally Hosted
  a. Readonly Provide a Timeline, Graph of Actions, filterable by tracker type
  b. Add Write behavior to Web
3. Content Generation using AI
  a. Simple generation for Summaries
  b. Targeted generation for specific types of documentats

